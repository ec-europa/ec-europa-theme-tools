<?php
/**
 * @file
 * Nexteuropa inline page navigation.
 */

define('NEXTEUROPA_INPAGE_NAV_DEPTH', 'h2');
global $_nexteuropa_inpage_nav_headings_;
/**
 * Implements hook_node_view().
 */
function nexteuropa_inpage_nav_init() {
  global $_nexteuropa_inpage_nav_headings_;
  $node = menu_get_object('node');
  node_build_content($node);
  $content = $node->content;
  unset($content['in_page_navigation']);
  $html = drupal_render($content);
  $_nexteuropa_inpage_nav_headings_ = _nexteuropa_inpage_nav_markup_anchor($html);
}

/**
 * Implements hook_block_info().
 */
function nexteuropa_inpage_nav_block_info() {
  $blocks = array();
  $blocks['inline_navigation']['info'] = t('In-page Navigation');
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function nexteuropa_inpage_nav_block_view($delta = '') {
  global $_nexteuropa_inpage_nav_headings_;
  $block = array();

  if ($delta === "inline_navigation") {
    $block['content'] = array();
    $items = array();

    if (empty($_nexteuropa_inpage_nav_headings_)) {

      return $block;
    }

    foreach ($_nexteuropa_inpage_nav_headings_ as $heading) {
      $items[]['item'] = '<a href="#' . $heading['id'] . '" class="inpage_nav__list-item">' . $heading['label'] . '</a>';
    }

    if (!empty($items) && $node = menu_get_object('node')) {
      // Include js.
      drupal_add_js(drupal_get_path('module', 'nexteuropa_inpage_nav') . '/js/inpage_nav.js');
      drupal_add_js(array('inpage_navigation' => array('node_title' => $node->title)), 'setting');

      $block['subject'] = t('Page Contents');
      $variables = array(
        'items' => $items,
        'attributes' => array(
          'class' => 'nav inpage-nav__list',
        ),
      );
      $block['content'] = '<div class="inpage-nav is-scrollspy-target">' . theme('item_list', $variables) . '</div>';
    }
  }

  return $block;
}

/**
 * Verifies if a field_group is subject of inpage navigation.
 */
function _nexteuropa_inpage_nav_group_anchor($group, $node) {
  // Check if label is subject of inpage nav.
  if (
    !_nexteuropa_inpage_nav_is_group_empty($group, $node) &&
    $group->format_settings['instance_settings']['show_label'] &&
    $group->format_settings['instance_settings']['label_element'] == NEXTEUROPA_INPAGE_NAV_DEPTH &&
    $id = _nexteuropa_inpage_nav_get_id($group->format_settings['instance_settings']['attributes'])
  ) {

    return array(
      'id' => $id,
      'label' => isset($group->format_settings['instance_settings']['label']) ? $group->format_settings['instance_settings']['label'] : $group->label,
    );
  }

  return FALSE;
}

/**
 * Helper: returns the list of heading anchors in the markup.
 */
function _nexteuropa_inpage_nav_markup_anchor($markup) {
  $pattern = "/<" . NEXTEUROPA_INPAGE_NAV_DEPTH . ".*?id=\"(.[^\"]*)\".*?>(.[^\<]*)<\/" . NEXTEUROPA_INPAGE_NAV_DEPTH . ">/";
  preg_match_all($pattern, $markup, $matches);
  $anchors = array();
  foreach ($matches[1] as $i => $id) {
    $anchors[] = array(
      'id' => $id,
      'label' => $matches[2][$i],
    );
  }
  return $anchors;
}

/**
 * Verifies if a field is subject of inpage navigation.
 */
function _nexteuropa_inpage_nav_field_anchor($ds_field, $field) {
  if (isset($ds_field['formatter_settings']['ft']['lb-el']) &&
    $ds_field['formatter_settings']['ft']['lb-el'] == NEXTEUROPA_INPAGE_NAV_DEPTH &&
    $id = _nexteuropa_inpage_nav_get_id($ds_field['formatter_settings']['ft']['lb-at'])
  ) {
    return $id;
  }

  return FALSE;
}

/**
 * Extract id value from config string.
 */
function _nexteuropa_inpage_nav_get_id($string) {
  $pattern = '/id=[\'\"]{0,1}(\w+)/';
  preg_match($pattern, $string, $matches);
  if ($matches) {
    return $matches[1];
  }
  return FALSE;
}

/**
 * Verifies if a field_group is empty or not chacking also embedded group.
 */
function _nexteuropa_inpage_nav_is_group_empty($group, $node) {
  // Check if group is not empty.
  $empty = TRUE;
  foreach ($group->children as $item) {
    // Child is group.
    if (preg_match('/^group_/', $item)) {
      $childgroup = field_group_load_field_group($item, 'node', $node->type, 'full');
      $empty = _nexteuropa_inpage_nav_is_group_empty($childgroup, $node);
    }
    // Child is field.
    elseif (preg_match('/^field_/', $item) || $item == 'body') {
      $empty = empty($node->{$item});
    }
    // Other type for examlpe display suite fields.
    else {
      // @TODO: find a better way, at the moment we assume all other items to be not empty.
      $empty = FALSE;
    }

    if (!$empty) {
      return FALSE;
    }
  }

  return TRUE;
}

/**
 * Implements hook_theme().
 *
 * Used to wrap the items in a specific class BEM way.
 */
function nexteuropa_inpage_nav_theme() {
  return array(
    'inpage_nav_block' => array(
      'template' => "templates/" . 'inpage_nav_block',
      'vars' => NULL,
    ),
  );
}
